(self.webpackChunkshell=self.webpackChunkshell||[]).push([[609],{609:(f,u,n)=>{n.r(u),n.d(u,{CartService:()=>d,Gender:()=>r,MfCartModule:()=>s,cartForRootGuard:()=>i});var o=n(5760);let d=(()=>{class e{constructor(){this.products=[]}add(t){this.products.push(t)}remove(t){this.products=this.products.filter(l=>l.id!==t)}count(){return this.products.length}clear(){this.products=[]}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=o.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac}),e})();var r=(()=>{return(e=r||(r={})).Men="men",e.Women="women",r;var e})();const c=new o.InjectionToken("CART FORROOT GUARD");function i(e){return!!e}let s=(()=>{class e{constructor(t){if(t)throw new TypeError("*** CartModule.forRoot() called twice. Lazy loaded modules should use CartModule.forChild() instead. ***")}static forRoot(){return{ngModule:e,providers:[d,{provide:c,useFactory:i,deps:[[d,new o.Optional,new o.SkipSelf]]}]}}static forChild(){return{ngModule:e}}}return e.\u0275fac=function(t){return new(t||e)(o.\u0275\u0275inject(c,8))},e.\u0275mod=o.\u0275\u0275defineNgModule({type:e}),e.\u0275inj=o.\u0275\u0275defineInjector({}),e})()}}]);